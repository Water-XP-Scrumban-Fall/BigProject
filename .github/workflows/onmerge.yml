---
    name: "PR_closed-on-release"
    on: 
      pull_request:
        types:
            - closed
        branches-ignore: 
            - main
            - feature*
    
    jobs:
      if_merged:
        if: github.event.pull_request.merged == true
        runs-on: ubuntu-latest
        steps: 
            - run: |
                echo The PR was merged

      build:
        name: "Build"
        runs-on: "ubuntu-latest"
        needs: if_merged
        steps:
          - uses: actions/checkout@v3
          - uses: actions/setup-java@v3
            with:
              java-version: '17'
              distribution: 'temurin'
          - name: Validate Gradle wrapper
            uses: gradle/wrapper-validation-action@v1
          - name: Setup Gradle
            uses: gradle/gradle-build-action@v2.7.0
            with:
              arguments: | 
                build 
                publish  
            env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 

      Generall-Aproval:
        name: Generall-A
        runs-on: ubuntu-latest
        needs: if_merged
        steps:
          - run: |
              echo A comment on PR 
          - name: Aproval for Prod
            uses: trstringer/manual-approval@v1
            with:
              secret: ${{ github.TOKEN }}
              approvers: DrShadowPLay
              minimum-approvals: 1
              issue-title: "Aprove For Prod"
              issue-body: "Please approve or deny the deployment of the relaese version to the TestSys environment."
              exclude-workflow-initiator-as-approver: false
              additional-approved-words: ''
              additional-denied-words: ''       


      createPullRequest:
       runs-on: ubuntu-latest
       needs: [build, Generall-Aproval]
       steps:
       - uses: actions/checkout@v3
         with:
           ref: release
       - name: Make changes to pull request
         run: date +%s > report.txt


       - name: Create-Pull-Request
         uses: actions/github-script@v6
         with:
           github-token: ${{ secrets.ACTIONS_TOKEN }}
           script: |
             const { repo, owner } = context.repo;
             const result = await github.rest.pulls.create({
               title: '[Example] Simple demo',
               owner,
               repo,
               head: '${{ github.ref_name }}',
               base: 'main',
               body: [
                 'This PR is auto-generated by',
                 '[actions/github-script](https://github.com/actions/github-script).'
               ].join('\n')
             });
             github.rest.issues.addLabels({
               owner,
               repo,
               issue_number: result.data.number,
               labels: ['feature', 'automated pr']
             }); 

