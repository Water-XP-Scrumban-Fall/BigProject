---
    name: "PR_closed-on-release"
    on: 
      pull_request:
        types:
            - closed
        branches-ignore: 
            - main
            - feature*
    
    jobs:
      if_merged:
        if: github.event.pull_request.merged == true
        runs-on: ubuntu-latest
        steps: 
            - run: |
                echo The PR was merged

      build:
        name: "Build"
        runs-on: "ubuntu-latest"
        needs: if_merged
        steps:
          - uses: actions/checkout@v3
          - uses: actions/setup-java@v3
            with:
              java-version: '17'
              distribution: 'temurin'
          - name: Validate Gradle wrapper
            uses: gradle/wrapper-validation-action@v1
          - name: Setup Gradle
            uses: gradle/gradle-build-action@v2.7.0
            with:
              arguments: | 
                build 
                publish  
            env:
              GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 

      Generall-Aproval:
        name: Aproval for creating PR to main
        runs-on: ubuntu-latest
        needs: if_merged
        steps:
          - run: |
              echo A comment on PR 
          - name: Aproval for Prod
            uses: trstringer/manual-approval@v1
            with:
              secret: ${{ github.TOKEN }}
              approvers: DrShadowPLay
              minimum-approvals: 1
              issue-title: "Aproval for a PR of ${{ github.head_ref || github.ref_name }} to main"
              issue-body: "Please approve or deny the deployment of the relaese version  ${{ github.head_ref || github.ref_name }} to main. "
              exclude-workflow-initiator-as-approver: false
              additional-approved-words: ''
              additional-denied-words: ''       


      createPullRequest:
       runs-on: ubuntu-latest
       needs: [build, Generall-Aproval]
       steps:
       - uses: actions/checkout@v3
         with:
           ref: release
       - name: Make changes to pull request
         run: date +%s > report.txt


       - name: Create-Pull-Request
         uses: actions/github-script@v6
         with:
           github-token: ${{ secrets.ACTIONS_TOKEN }}
           script: |
             const { repo, owner } = context.repo;
             const result = await github.rest.pulls.create({
               title: '[PR to main] for ${{ github.head_ref || github.ref_name }}',
               owner,
               repo,
               head: '${{ github.ref_name }}',
               base: 'main',
               body: [
                 'This PR is auto-generated to aprove the release version on the main branch.',
                 'Pls. check the result of the build and the aproval of the QA team. if everything is ok on Prod, pls. merge the PR.'
               ].join('\n')
             });
             github.rest.issues.addLabels({
               owner,
               repo,
               issue_number: result.data.number,
               labels: ['feature', 'automated pr']
             }); 

